version: "3.9"

services:
  lector-db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: nova
      POSTGRES_PASSWORD: changeme
      POSTGRES_DB: novastream
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    volumes:
      - lector_db_data:/var/lib/postgresql/data
    networks: [proxy]
    restart: unless-stopped

  lector-api:
    image: node:20-alpine
    working_dir: /app
    environment:
      DATABASE_URL: postgresql://nova:changeme@lector-db:5432/novastream
      API_PORT: 4000
      API_JWT_ACCESS_TTL: 900
      API_JWT_REFRESH_TTL: 1209600
      API_JWT_SECRET: Y7dD6Vh2mC4pQ8tR1sX9zK3wL5aN0fB2gU4hJ6iO8lT1qP3dV
      API_REFRESH_SECRET: mZ2xL7nH3qK9tC8vS4pD0rG6yB1wF5aE7uJ9hQ3oN2lM4kR8
      API_ENCRYPTION_KEY: a1b2c3d4e5f60718293a4bc5de6f7a801f2e3d4c9b8a7c6d
      CORS_ORIGIN: https://lector.lorna.tv
      COOKIE_SECURE: "true"
      COOKIE_SAMESITE: lax
      TMDB_API_KEY: d8175301037c00f3c719478998396539
      NODE_ENV: production
    command:
      - sh
      - -lc
      - |
        set -e
        apk add --no-cache unzip curl netcat-openbsd
        until nc -z lector-db 5432; do echo 'waiting db'; sleep 2; done
        curl -L https://github.com/SaohTG/Nova-Stream/archive/refs/heads/main.zip -o /tmp/src.zip
        unzip -o -q /tmp/src.zip -d /tmp
        rm -rf /app/* && cp -r /tmp/Nova-Stream-main/api/. /app
        npm install --no-audit --no-fund
        npm run build
        node dist/main.js
    depends_on: [lector-db]
    networks: [proxy]
    restart: unless-stopped

  lector-web:
    image: node:20-alpine
    working_dir: /app
    environment:
      VITE_API_BASE: /api
    command:
      - sh
      - -lc
      - |
        set -e
        apk add --no-cache unzip curl
        curl -L https://github.com/SaohTG/Nova-Stream/archive/refs/heads/main.zip -o /tmp/src.zip
        unzip -o -q /tmp/src.zip -d /tmp
        rm -rf /app/* && cp -r /tmp/Nova-Stream-main/web/. /app

        # Vite + React + Tailwind v4
        printf '%s\n' '{ "name":"nova-stream-web","private":true,"type":"module","scripts":{"dev":"vite","build":"vite build","preview":"vite preview"} }' > /app/package.json
        printf '%s\n' 'import { defineConfig } from "vite"; import react from "@vitejs/plugin-react"; export default defineConfig({ plugins:[react()], server:{host:true,port:5173} });' > /app/vite.config.js
        printf '%s\n' 'export default { plugins: { "@tailwindcss/postcss": {} } }' > /app/postcss.config.js
        mkdir -p /app/src
        [ -f /app/src/styles.css ] || printf '%s\n' '@import "tailwindcss";' > /app/src/styles.css
        for f in /app/src/main.{jsx,tsx,js,ts}; do [ -f "$f" ] && (grep -q 'styles.css' "$f" || sed -i '1i import "./styles.css";' "$f"); done
        npm install --no-audit --no-fund react react-dom react-router-dom axios hls.js vite @vitejs/plugin-react tailwindcss postcss autoprefixer @tailwindcss/postcss
        npm run build
        npm run preview -- --host 0.0.0.0 --port 5173
    depends_on: [lector-api]
    networks: [proxy]
    restart: unless-stopped

volumes:
  lector_db_data: {}

networks:
  proxy:
    external: true
