version: "3.9"

services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: nova
      POSTGRES_PASSWORD: changeme
      POSTGRES_DB: novastream
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    volumes:
      - db_data_ns6:/var/lib/postgresql/data
    # Pas de healthcheck pour éviter les faux "unhealthy"

  api:
    image: node:20-alpine
    working_dir: /app
    environment:
      DATABASE_URL: postgres://nova:changeme@db:5432/novastream
      API_PORT: 4000
      API_JWT_ACCESS_TTL: 900
      API_JWT_REFRESH_TTL: 1209600
      API_JWT_SECRET: Y7dD6Vh2mC4pQ8tR1sX9zK3wL5aN0fB2gU4hJ6iO8lT1qP3dV
      API_REFRESH_SECRET: mZ2xL7nH3qK9tC8vS4pD0rG6yB1wF5aE7uJ9hQ3oN2lM4kR8
      API_ENCRYPTION_KEY: 9f1c3a4b5e6d7f8091a2b3c4d5e6f7089a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4
      CORS_ORIGIN: http://85.31.239.110:5173
      TMDB_API_KEY: d8175301037c00f3c719478998396539
      NODE_ENV: production
    command:
      - sh
      - -lc
      - |
        set -e
        apk add --no-cache unzip curl netcat-openbsd
        # attendre la DB
        until nc -z db 5432; do echo '⏳ waiting for db...'; sleep 2; done
        # récupérer le code et builder
        rm -rf /tmp/Nova-Stream-main /tmp/src.zip
        curl -L https://github.com/SaohTG/Nova-Stream/archive/refs/heads/main.zip -o /tmp/src.zip
        unzip -o -q /tmp/src.zip -d /tmp
        rm -rf /app/*
        cp -r /tmp/Nova-Stream-main/api/. /app
        npm install
        npm run build
        node dist/main.js
    depends_on:
      - db
    ports:
      - "4000:4000"
    restart: unless-stopped

  web:
    image: node:20-alpine
    working_dir: /app
    environment:
      VITE_API_BASE: http://85.31.239.110:4000   # URL joignable par le navigateur
    command:
      - sh
      - -lc
      - |
        set -e
        echo "==> Install base tools"
        apk add --no-cache unzip curl

        echo "==> Fetch repo zip"
        rm -rf /tmp/Nova-Stream-main /tmp/src.zip
        curl -L https://github.com/SaohTG/Nova-Stream/archive/refs/heads/main.zip -o /tmp/src.zip

        echo "==> Unzip"
        unzip -o -q /tmp/src.zip -d /tmp

        echo "==> Prepare /app"
        rm -rf /app/*
        cp -r /tmp/Nova-Stream-main/web/. /app

        echo "==> Write valid package.json"
        cat > /app/package.json << 'EOF'
        {
          "name": "nova-stream-web",
          "version": "0.1.0",
          "private": true,
          "type": "module",
          "scripts": {
            "dev": "vite",
            "build": "vite build",
            "preview": "vite preview"
          },
          "dependencies": {
            "axios": "^1.6.7",
            "hls.js": "^1.5.7",
            "react": "^18.2.0",
            "react-dom": "^18.2.0"
          },
          "devDependencies": {
            "@vitejs/plugin-react": "^4.2.0",
            "autoprefixer": "^10.4.17",
            "postcss": "^8.4.35",
            "tailwindcss": "^3.4.6",
            "vite": "^5.0.0"
          }
        }
        EOF

        echo "==> Ensure vite.config.js"
        if [ ! -f /app/vite.config.js ]; then
          cat > /app/vite.config.js << 'EOF'
          import { defineConfig } from "vite";
          import react from "@vitejs/plugin-react";
          export default defineConfig({
            plugins: [react()],
            server: { host: true, port: 5173 }
          });
          EOF
        fi

        echo "==> npm install"
        npm install --no-audit --no-fund

        echo "==> npm run build"
        npm run build

        echo "==> start preview"
        npm run preview -- --host 0.0.0.0 --port 5173
    depends_on:
      - api
    ports:
      - "5173:5173"
    restart: unless-stopped

volumes:
  db_data_ns6: {}
