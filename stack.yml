version: "3.9"

# ⚠️ IMPORTANT : remplacez la ligne ci-dessous par **le vrai nom du réseau** de votre Nginx Proxy Manager.
# Exemples fréquents: "proxy-npm_default", "nginxproxymanager_default", "npm_default".
# Si vous ne connaissez pas le nom : dans Portainer > Containers > proxy-npm-1 > Networks, notez le réseau attaché.
# Puis mettez ce nom sur "name:" ci-dessous.
networks:
  npm:
    external: true
    name: proxy-npm_default   # ← CHANGEZ CE NOM SI NÉCESSAIRE
  webnet:
    driver: bridge

volumes:
  db_data_ns6: {}

services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: nova
      POSTGRES_PASSWORD: changeme
      POSTGRES_DB: novastream
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    volumes:
      - db_data_ns6:/var/lib/postgresql/data
    networks: [webnet]

  api:
    image: node:20-alpine
    working_dir: /app
    environment:
      DATABASE_URL: postgresql://nova:changeme@db:5432/novastream
      API_PORT: 4000
      API_JWT_ACCESS_TTL: 900
      API_JWT_REFRESH_TTL: 1209600
      API_JWT_SECRET: Y7dD6Vh2mC4pQ8tR1sX9zK3wL5aN0fB2gU4hJ6iO8lT1qP3dV
      API_REFRESH_SECRET: mZ2xL7nH3qK9tC8vS4pD0rG6yB1wF5aE7uJ9hQ3oN2lM4kR8
      API_ENCRYPTION_KEY: a1b2c3d4e5f60718293a4bc5de6f70819a2b3c4d5e6f7a801f2e3d4c9b8a7c6d
      SITE_DOMAIN: ${SITE_DOMAIN:-lorna.tv}
      CORS_ORIGIN: https://${SITE_DOMAIN:-lorna.tv}
      COOKIE_SECURE: "true"
      COOKIE_SAMESITE: lax
      TMDB_API_KEY: d8175301037c00f3c719478998396539
      NODE_ENV: production
    command:
      - sh
      - -lc
      - |
        set -e
        apk add --no-cache unzip curl netcat-openbsd
        until nc -z db 5432; do echo '⏳ waiting for db...'; sleep 2; done
        rm -rf /tmp/Nova-Stream-main /tmp/src.zip
        curl -L https://github.com/SaohTG/Nova-Stream/archive/refs/heads/main.zip -o /tmp/src.zip
        unzip -o -q /tmp/src.zip -d /tmp
        rm -rf /app/*
        cp -r /tmp/Nova-Stream-main/api/. /app
        npm install --no-audit --no-fund
        npm run build
        node dist/main.js
    depends_on: [db]
    networks:
      - webnet
      - npm     # NPM (proxy-npm-1) verra le service "api:4000" sur ce réseau
    restart: unless-stopped

  web:
    image: node:20-alpine
    working_dir: /app
    environment:
      VITE_API_BASE: /api
      NODE_ENV: production
    command:
      - sh
      - -lc
      - |
        set -e
        apk add --no-cache unzip curl
        rm -rf /tmp/Nova-Stream-main /tmp/src.zip
        curl -L https://github.com/SaohTG/Nova-Stream/archive/refs/heads/main.zip -o /tmp/src.zip
        unzip -o -q /tmp/src.zip -d /tmp
        rm -rf /app/*
        cp -r /tmp/Nova-Stream-main/web/. /app
        printf '%s\n' '{' \
          '  "name": "nova-stream-web",' \
          '  "version": "0.1.0",' \
          '  "private": true,' \
          '  "type": "module",' \
          '  "scripts": {' \
          '    "dev": "vite",' \
          '    "build": "vite build",' \
          '    "preview": "vite preview"' \
          '  },' \
          '  "dependencies": {' \
          '    "axios": "^1.6.7",' \
          '    "hls.js": "^1.5.7",' \
          '    "react": "^18.2.0",' \
          '    "react-dom": "^18.2.0",' \
          '    "react-router-dom": "^6.26.2"' \
          '  },' \
          '  "devDependencies": {' \
          '    "@vitejs/plugin-react": "^4.2.0",' \
          '    "autoprefixer": "^10.4.17",' \
          '    "postcss": "^8.4.35",' \
          '    "tailwindcss": "^3.4.6",' \
          '    "vite": "^5.0.0"' \
          '  }' \
          '}' > /app/package.json
        printf '%s\n' 'import { defineConfig } from "vite";' \
          'import react from "@vitejs/plugin-react";' \
          'export default defineConfig({' \
          '  plugins: [react()], ' \
          '  server: { host: true, port: 5173 }' \
          '});' > /app/vite.config.js
        npm install --no-audit --no-fund
        npm run build
        npm run preview -- --host 0.0.0.0 --port 5173
    depends_on: [api]
    networks:
      - webnet
      - npm     # NPM (proxy-npm-1) verra le service "web:5173" sur ce réseau
    restart: unless-stopped
