version: "3.9"

services:
  caddy:
    image: caddy:2
    environment:
      SITE_DOMAIN: lector.lorna.tv
      CADDYFILE: |
        {$SITE_DOMAIN} {
          encode zstd gzip
          handle_path /api/* { reverse_proxy api:4000 }
          handle { reverse_proxy web:5173 }
        }
    entrypoint: ["/bin/sh","-c","printf '%s\n' \"$CADDYFILE\" > /etc/caddy/Caddyfile && exec caddy run --config /etc/caddy/Caddyfile --adapter caddyfile"]
    volumes:
      - caddy-data:/data
      - caddy-config:/config
    depends_on: [api, web]
    networks: [webnet, proxy]   # <â€” ajoute proxy
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: nova
      POSTGRES_PASSWORD: changeme
      POSTGRES_DB: novastream
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    volumes: [db_data_ns6:/var/lib/postgresql/data]
    networks: [webnet]
    restart: unless-stopped

  api:
    image: node:20-alpine
    working_dir: /app
    environment:
      DATABASE_URL: postgresql://nova:changeme@db:5432/novastream
      API_PORT: 4000
      API_JWT_ACCESS_TTL: 900
      API_JWT_REFRESH_TTL: 1209600
      API_JWT_SECRET: Y7dD6Vh2mC4pQ8tR1sX9zK3wL5aN0fB2gU4hJ6iO8lT1qP3dV
      API_REFRESH_SECRET: mZ2xL7nH3qK9tC8vS4pD0rG6yB1wF5aE7uJ9hQ3oN2lM4kR8
      API_ENCRYPTION_KEY: a1b2c3d4e5f60718293a4bc5de6f70819a2b3c4d5e6f7a801f2e3d4c9b8a7c6d
      CORS_ORIGIN: https://${SITE_DOMAIN}
      COOKIE_SECURE: "true"
      COOKIE_SAMESITE: lax
      TMDB_API_KEY: d8175301037c00f3c719478998396539
      NODE_ENV: production
    command:
      - sh
      - -lc
      - |
        set -e
        apk add --no-cache unzip curl netcat-openbsd
        until nc -z db 5432; do echo 'waiting for db...'; sleep 2; done
        rm -rf /tmp/Nova-Stream-main /tmp/src.zip
        curl -L https://github.com/SaohTG/Nova-Stream/archive/refs/heads/main.zip -o /tmp/src.zip
        unzip -o -q /tmp/src.zip -d /tmp
        rm -rf /app/* && cp -r /tmp/Nova-Stream-main/api/. /app
        npm install --no-audit --no-fund
        npm run build
        node dist/main.js
    depends_on: [db]
    networks: [webnet]
    restart: unless-stopped

  web:
    image: node:20-alpine
    working_dir: /app
    environment:
      VITE_API_BASE: /api
    command:
      - sh
      - -lc
      - |
        set -e
        apk add --no-cache unzip curl
        rm -rf /tmp/Nova-Stream-main /tmp/src.zip
        curl -L https://github.com/SaohTG/Nova-Stream/archive/refs/heads/main.zip -o /tmp/src.zip
        unzip -o -q /tmp/src.zip -d /tmp
        rm -rf /app/* && cp -r /tmp/Nova-Stream-main/web/. /app
        printf '%s\n' '{ "name":"nova-stream-web","private":true,"type":"module","scripts":{"dev":"vite","build":"vite build","preview":"vite preview"} }' > /app/package.json
        printf '%s\n' 'import { defineConfig } from "vite"; import react from "@vitejs/plugin-react"; export default defineConfig({ plugins:[react()], server:{host:true,port:5173} });' > /app/vite.config.js
        npm install --no-audit --no-fund @vitejs/plugin-react react react-dom react-router-dom axios hls.js vite tailwindcss postcss autoprefixer
        npm run build
        npm run preview -- --host 0.0.0.0 --port 5173
    depends_on: [api]
    networks: [webnet]
    restart: unless-stopped

volumes:
  db_data_ns6: {}
  caddy-data: {}
  caddy-config: {}

networks:
  webnet:
    driver: bridge
  proxy:
    external: true
