services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: ./api
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      API_PORT: ${API_PORT}
      API_JWT_ACCESS_TTL: ${API_JWT_ACCESS_TTL}
      API_JWT_REFRESH_TTL: ${API_JWT_REFRESH_TTL}
      API_JWT_SECRET: ${API_JWT_SECRET}
      API_REFRESH_SECRET: ${API_REFRESH_SECRET}
      API_ENCRYPTION_KEY: ${API_ENCRYPTION_KEY}
      CORS_ORIGIN: ${CORS_ORIGIN}
      TMDB_API_KEY: ${TMDB_API_KEY}
      NODE_ENV: ${NODE_ENV}
    ports:
      - "${API_PORT:-4000}:4000"
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: ./web
    depends_on:
      api:
        condition: service_started
    environment:
      VITE_API_BASE: http://localhost:${API_PORT:-4000}
    ports:
      - "5173:5173"

volumes:
  db_data:
